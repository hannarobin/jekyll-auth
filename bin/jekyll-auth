#!/usr/bin/env ruby
# frozen_string_literal: true

# Command-line interface for jekyll-auth

require "mercenary"
require "jekyll-auth"
require "open3"

Mercenary.program("jekyll-auth") do |p|
  p.version JekyllAuth::VERSION
  p.description "A simple way to use Google OAuth2 to serve a protected jekyll site"
  p.syntax "jekyll-auth <subcommand> options"

  p.command(:new) do |c|
    c.syntax "new"
    c.description "Initialize an existing Jekyll site as a Jekyll Auth site"
    c.action do |_args, _options|
      JekyllAuth::Commands.copy_templates

      if JekyllAuth::Commands.changed?
        puts "Looks like we've made some changes, you may want to do a git commit and git push sometime soon".yellow
      end

      puts "Setup complete. Run `jekyll-auth` to view the authenticated site."
    end
  end

  # Run the standard jekyll build command
  # Called by Rake task, to allow the gem
  # to add functionality here in the future
  p.command(:build) do |c|
    c.syntax "build"
    c.description "Build the Jekyll site"
    c.action do |_args, options|
      require "jekyll"
      Jekyll::Commands::Build.process(options)
    end
  end

  p.command(:serve) do |c|
    c.syntax "serve"
    c.description "Run Jekyll Auth site locally"
    c.option "host", "--host <HOST>", "Listen at the given hostname, e.g., 127.0.0.1"
    c.option "port", "--port <PORT>", "Listen on the given port, e.g., 4000"

    c.action do |_args, options|
      # Ensure environmental variables are set
      unless %w(GOOGLE_CLIENT_ID GOOGLE_CLIENT_SECRET).all? { |v| JekyllAuth::Commands.env_var_set?(v) }
        puts "Whoops. Looks like you forgot to tell Jekyll Auth about your app".red
        puts "Be sure to run export GOOGLE_CLIENT_ID=[client id], export GOOGLE_CLIENT_SECRET=[client secret]".red
        puts "See the readme for more information on where to find these".red
        exit 1
      end

      # build site
      p.go ["build"]

      host = options["host"] || "0.0.0.0"
      port = options["port"] || "4000"

      puts "Spinning up the server with authentication. Use CTRL-C to stop."
      puts "To preview the site without authentication, use the `jekyll serve` command"
      JekyllAuth::Commands.execute_command "bundle", "exec", "rackup", "-o", host, "-p", port
    end
  end

  p.default_command(:serve)
end
